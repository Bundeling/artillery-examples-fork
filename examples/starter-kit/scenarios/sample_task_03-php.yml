config:
  target: 'https://api.someservice.com'
  phases:
    - duration: 5
      arrivalRate: 1
      name: 'Warming up the application'
    - duration: 10
      rampTo: 30
      name: 'Mild load on the application'
    - duration: 180
      arrivalRate: 3
      maxVusers: 120
      name: 'Putting load on the application'
  payload:
    - path: ../data/users.csv
      fields:
        - firstName
        - lastName
        - emailAddress
      order: sequence
      skipHeader: true
  ensure:
    thresholds:
      - http.response_time.p95: 200
    conditions:
      - expression: '((vusers.created - vusers.completed)/vusers.created * 100) <= 1'
  tls:
    rejectUnauthorized: false
  http:
    timeout: 15
    maxSockets: 6
  environments:
    production:
      target: 'http://wontresolve.prod:44321'
      phases:
        - duration: 10
          arrivalRate: 10
    local:
      target: 'http://127.0.0.1:3003'
      phases:
        - duration: 60
          arrivalRate: 20
  variables:
    postcode:
      - SE1
      - EC1
      - E8
      - WH9
    id:
      - '8731'
      - '9965'
      - '2806'
  processor: ../processors/_baseProcessor.js
scenarios:
  - name: 'The first flow'
    flow:
      - function: generateRandomData
      - get:
          url: '/members/{{ id }}'
          afterResponse:
            - printStatus
          headers:
            x-api-key: '{{ $processEnvironment.SERVICE_API_KEY }}'
            Content-Type: application/json
            Accept: application/json
      - post:
          url: /members/member
          afterResponse:
            - printStatus
          json:
            id: '{{ id }}'
            name: '{{ name }}'
            description: 'Some randomly generated user'
            salary: 666000
          headers:
            x-api-key: '{{ $processEnvironment.SERVICE_API_KEY }}'
            Content-Type: application/json
            Accept: application/json
  - name: 'The second flow'
    flow:
      - function: generateRandomData
      - get:
          url: '/members/{{ id }}'
          afterResponse:
            - printStatus
          headers:
            x-api-key: '{{ $processEnvironment.SERVICE_API_KEY }}'
            Content-Type: application/json
            Accept: application/json
      - post:
          url: /members/member
          afterResponse:
            - printStatus
          json:
            id: '{{ id }}'
            name: '{{ name }}'
            description: 'Some randomly generated user'
            salary: 666000
          headers:
            x-api-key: '{{ $processEnvironment.SERVICE_API_KEY }}'
            Content-Type: application/json
            Accept: application/json
